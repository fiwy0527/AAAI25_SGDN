# general settings
name: train_SGDN_R2WD
model_type: SGDNModel
scale: 1
num_gpu: auto
manual_seed: 0

find_unused_parameters: false

# dataset and data loader settings
datasets:
  train:
    name: R2WDTrain
    type: PairedImageDataset
    dataroot_gt: /home/File/wenxuan/dataset/R2WD/train/gt
    dataroot_lq: /home/File/wenxuan/dataset/R2WD/train/input
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: R2WDTrainVal
    type: PairedImageDataset
    dataroot_gt: /home/File/wenxuan/dataset/R2WD/test/gt
    dataroot_lq: /home/File/wenxuan/dataset/R2WD/test/input
    io_backend:
      type: disk

# network structures
network_g:
  type: SGDN

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.999]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [420000]
    restart_weights: [1]
    eta_min: !!float 4e-8

  total_iter: 420000
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  ssim_opt:
    type: SSIMLoss
    channels: 3
    loss_weight: 0.5

  fft_opt:
    type: FFTLoss
    loss_weight: 0.1
    reduction: mean

# validation settings
val:
  val_freq: 1400
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 1
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 1400
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
